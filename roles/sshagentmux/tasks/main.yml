---
- name: install system packages
  apt: pkg={{ item }}
  with_items:
    - sqlite3

- name: install sshagentmux
  pip: name=sshagentmux virtualenv="{{ sshagentmux.virtualenv_path }}"

- name: update-alternatives
  alternatives: name={{ item }}
                path={{ sshagentmux.virtualenv_path }}/bin/{{ item }}
                link=/usr/local/bin/{{ item }}
  with_items:
    - authorization_proxy
    - sshagentmux

- name: configure authorization_proxy upstart service
  upstart_service:
    name: authorization_proxy
    cmd: /usr/local/bin/authorization_proxy
    args: "--socket {{ sshagentmux.auth_socket }} --logfile /var/log/authorization_proxy.log --pidfile /var/run/authorization_proxy.pid start"
    user: root
    respawn: true
    expect: daemon
  notify: restart authorization_proxy
  when: ansible_distribution_version == "14.04"

- name: configure authorization_proxy systemd service
  systemd_service:
    name: authorization_proxy
    cmd: /usr/local/bin/authorization_proxy
    args: "--socket {{ sshagentmux.auth_socket }} --logfile /var/log/authorization_proxy.log --pidfile /var/run/authorization_proxy.pid debug"
    user: root
  notify: restart authorization_proxy
  when: ansible_distribution_version == "16.04"

- name: configure authorization_proxy profile.d
  template: src=etc/profile.d/authorization_proxy.sh
            dest=/etc/profile.d/authorization_proxy.sh
            mode=0755

- meta: flush_handlers

- name: start and enable authorization_proxy service
  service: name=authorization_proxy state=started enabled=yes

- include: ssh_keys.yml
  tags: users

- include: checks.yml
  when: sensu.client.enable_checks|default('True')|bool
  tags: sensu-checks

- include: metrics.yml
  when: sensu.client.enable_metrics|default('True')|bool
  tags: sensu-metrics

- include: serverspec.yml
  when: serverspec.enabled|default("True")|bool
  tags: serverspec
