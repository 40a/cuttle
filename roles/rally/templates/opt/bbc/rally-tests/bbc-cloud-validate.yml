# {{ ansible_managed }}

---
  KeystoneBasic.create_delete_user:
    -
      args:
        name_length: 10
      runner:
        type: "constant"
        times: 100
        concurrency: 20
      sla:
        failure_rate:
          max: 5

  KeystoneBasic.create_and_delete_role:
    -
      runner:
        type: "constant"
        times: 100
        concurrency: 20
      sla:
        failure_rate:
          max: 5

  KeystoneBasic.create_update_and_delete_tenant:
    -
      args:
        name_length: 10
      runner:
        type: "constant"
        times: 100
        concurrency: 20
      sla:
        failure_rate:
          max: 5

  Authenticate.validate_cinder:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 50
        concurrency: 10
      context:
        users:
          tenants: 3
          users_per_tenant: 5
      sla:
        failure_rate:
          max: 5

  Authenticate.validate_glance:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 50
        concurrency: 10
      context:
        users:
          tenants: 3
          users_per_tenant: 5
      sla:
        failure_rate:
          max: 5

  Authenticate.validate_neutron:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 50
        concurrency: 10
      context:
        users:
          tenants: 3
          users_per_tenant: 5
      sla:
        failure_rate:
          max: 5

  Authenticate.validate_nova:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 50
        concurrency: 10
      context:
        users:
          tenants: 3
          users_per_tenant: 5
      sla:
        failure_rate:
          max: 5

  GlanceImages.create_and_delete_image:
    -
      args:
        image_location: "http://download.cirros-cloud.net/0.3.1/cirros-0.3.1-x86_64-disk.img"
        container_format: "bare"
        disk_format: "qcow2"
      runner:
        type: "constant"
        times: 50
        concurrency: 5
      context:
        users:
          tenants: 2
          users_per_tenant: 3
      sla:
        failure_rate:
          max: 5

  NeutronNetworks.create_and_delete_networks:
    -
      args:
        network_create_args: {}
      runner:
        type: "constant"
        times: 20
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
      sla:
        failure_rate:
          max: 5

  NeutronNetworks.create_and_delete_ports:
    -
      args:
        network_create_args: {}
        port_create_args: {}
        ports_per_network: 5
      runner:
        type: "constant"
        times: 100
        concurrency: 5
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            port: -1
      sla:
        failure_rate:
          max: 5

  NeutronNetworks.create_and_delete_subnets:
    -
      args:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
      runner:
        type: "constant"
        times: 20
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
      sla:
        failure_rate:
          max: 5

  CinderVolumes.create_and_delete_volume:
    -
      args:
        size: 1
      runner:
        type: "constant"
        times: 20
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 2
        quotas:
          cinder:
            volumes: -1
      sla:
        failure_rate:
          max: 5

  CinderVolumes.create_and_delete_snapshot:
    -
      args:
          force: false
      runner:
        type: "constant"
        times: 20
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 2
        volumes:
          size: 1
      sla:
        failure_rate:
          max: 5

  CinderVolumes.create_from_volume_and_delete_volume:
    -
      args:
        size: 1
      runner:
        type: "constant"
        times: 20
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 2
        volumes:
          size: 1
      sla:
        failure_rate:
          max: 5

  NovaServers.boot_and_delete_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: {{ image_name | default("cirros") }}
        force_delete: false
        nics:
          - { "net-id": "{{ net_id }}" }
      runner:
        type: "constant"
        times: 100
        concurrency: 12
      context:
        users:
          tenants: 3
          users_per_tenant: 2
        quotas:
          nova:
            instances: -1
            cores: -1
            ram: -1
      sla:
        failure_rate:
          max: 5

  NovaServers.boot_server_from_volume_and_delete:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: {{ image_name | default("cirros") }}
        volume_size: 10
        force_delete: false
        nics:
          - { "net-id": "{{ net_id }}" }
      runner:
        type: "constant"
        times: 20
        concurrency: 5
      context:
        users:
          tenants: 3
        quotas:
          cinder:
            volumes: -1
      sla:
        failure_rate:
          max: 10

  NovaServers.suspend_and_resume_server:
    -
      args:
        flavor:
          name: "m1.tiny"
        image:
          name: {{ image_name | default("cirros") }}
        force_delete: false
        nics:
          - { "net-id": {{ net_id }} }
      runner:
        type: "constant"
        times: 20
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 5

  NovaServers.snapshot_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
          name: {{ image_name | default("cirros") }}
        force_delete: false
        nics:
          - { "net-id": "{{ net_id }}" }
      runner:
        type: "constant"
        times: 20
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 5

  NovaServers.resize_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
          name: {{ image_name | default("cirros") }}
        to_flavor:
            name: "m1.small"
        confirm: true
        force_delete: false
        nics:
          - { "net-id": "{{ net_id }}" }
      runner:
        type: "constant"
        times: 20
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 5
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
          name: {{ image_name | default("cirros") }}
        to_flavor:
            name: "m1.small"
        confirm: false
        force_delete: false
        nics:
          - { "net-id": "{{ net_id }}" }
      runner:
        type: "constant"
        times: 20
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 5

  NovaServers.boot_and_list_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
          name: {{ image_name | default("cirros") }}
        detailed: True
        force_delete: false
        nics:
          - { "net-id": "{{ net_id }}" }
      runner:
        type: "constant"
        times: {{ vcpu_limit }}
        concurrency: 12
      context:
        users:
          tenants: 3
          users_per_tenant: 2
        quotas:
          nova:
            instances: -1
            cores: -1
            ram: -1
      sla:
        failure_rate:
          max: 5

  NovaKeypair.create_and_delete_keypair:
    -
      runner:
        type: "constant"
        times: 20
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 5

  VMTasks.boot_runcommand_delete:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: {{ image_name | default("cirros") }}
        nics:
          - { "net-id": "{{ net_id }}" }
        floating_network: "external"
        force_delete: false
        volume_args:
            size: 1
        script: "rally/samples/tasks/support/instance_dd_test.sh"
        interpreter: "/bin/sh"
        username: "cirros"
      runner:
        type: "constant"
        times: 50
        concurrency: 5
      context:
        users:
          tenants: 3
          users_per_tenant: 2
      sla:
        failure_rate:
          max: 10
