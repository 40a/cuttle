{
    "_comment": [
    "Definitions for this data structure:",
    "data_center_uuid = UUID corresponding to the local datacenter.",
    "backend_source = IP address from which connections to the back-end",
    "    IPMI network should originate. This IP should be bound to a real,",
    "    arping interface on the proxy box. If this is ommitted, we assume",
    "    we have layer-2 connectivity to the IPMI vlan back-end and attempt",
    "    to auto-detect the IP we should use.",
    "pool_ips = The first string or IP will be used in the URLs generated by",
    "    the CGI script that the user will presumably click on to connect to",
    "    an ipmi card. (This may be useful if the IPMI proxy is located",
    "    behind a static NAT of some kind.) the second IP should correspond",
    "    to an IP address on the IPMI proxy box that is in the pool. These",
    "    IPs should be bound to either the primary interface (if the proxy",
    "    is behind a NAT and we're using layer-2 connectivity to talk to it),",
    "    or on a dummy or loopback interface (if we're using layer-3",
    "    connectivity to talk to it). If this value is ommitted from the",
    "    config, we assume we are using layer-3 connectivity and try to",
    "    auto-detect pool IPs from the dummy0 interface." ],
    "datacenters": [
      {% for datacenter in ipmi_proxy.datacenters %}
      {
        "name": "{{ datacenter.name }}",
        "data_center_uuid": "{{ datacenter.data_center_uuid }}",
        "backend_source": "{{ datacenter.backend_source_ip }}"
      }{% if not loop.last %},{% endif %}
      {% endfor %}
    ],
    "pool_ips": [
      {% for ip in ipmi_proxy.ip_pool %}
          ["{{ ip }}", "{{ ip }}"]{% if not loop.last %},{% endif %}
      {% endfor %}
    ]
}
