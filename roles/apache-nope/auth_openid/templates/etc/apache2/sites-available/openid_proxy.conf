#jinja2:trim_blocks: False
# {{ ansible_managed }}
{%- macro apache_location(path, location) %}
    <Location {{ path }}>
      {%- if openid_proxy.oidc.enabled %}
      {%- if location.auth_type|default('') != "config" %}
        AuthType openid-connect
        Require claim is_staff:true
      {%- endif %}
      {%- endif %}
      {%- if location.config is defined %}
        {%- for config_item in location.config %}
        {%- for key, value in config_item.iteritems() %}
        {{ key }} {{ value }}
        {%- endfor %}
        {%- endfor %}
      {%- endif %}
      {%- if location.proxy is defined %}
        ProxyPass {{ location.proxy }}
        ProxyPassReverse {{ location.proxy }}
      {%- endif %}
    </Location>
{%- endmacro %}
{%- if openid_proxy.ssl.enabled and openid_proxy.http_redirect %}
<VirtualHost {{ openid_proxy.listen.ip }}:{{ openid_proxy.listen.port }}>
      ServerName {{ openid_proxy.server_name }}
      Redirect permanent / https://{{ openid_proxy.server_name }}/
      FileETag MTime Size
</VirtualHost>
{%- endif %}
{%- if openid_proxy.ssl.enabled %}
<VirtualHost {{ openid_proxy.listen.ip }}:{{ openid_proxy.listen.port_ssl }}>
{%- else %}
<VirtualHost {{ openid_proxy.listen.ip }}:{{ openid_proxy.listen.port }}>
{%- endif %}
      ServerName {{ openid_proxy.server_name }}
      ServerAdmin {{ openid_proxy.server_admin }}
      FileETag MTime Size
    {%- if openid_proxy.ssl.enabled %}
    SSLCertificateFile /etc/ssl/certs/{{ openid_proxy.vhost_name }}.pem
    SSLCertificateKeyFile /etc/ssl/private/{{ openid_proxy.vhost_name }}.key
    {{ apache.ssl.settings }}
    {%- endif %}

    {%- if openid_proxy.oidc.enabled %}
      OIDCProviderIssuer {{ openid_proxy.oidc.issuer }}
      OIDCProviderAuthorizationEndpoint {{ openid_proxy.oidc.auth_endpoint }}
      OIDCProviderTokenEndpoint {{ openid_proxy.oidc.token_endpoint }}
      OIDCProviderUserInfoEndpoint {{ openid_proxy.oidc.info_endpoint }}
      OIDCClientID {{ openid_proxy.oidc.id }}
      OIDCClientSecret {{ openid_proxy.oidc.secret }}
      # only used internally for passing state around securely
      OIDCCryptoPassphrase {{ openid_proxy.oidc.passphrase }}
      # required
      OIDCScope "openid"
      # Arbitrary but must be a path under the protected resource.
      OIDCRedirectURI https://{{ openid_proxy.server_name }}/auth/callback
      # Sessions are valid for 12 hours (60*60*12) = 43200
      OIDCSessionInactivityTimeout 43200
      # Store session state in stateless manner
      OIDCSessionType client-cookie
      # sets REMOTE_USER to the user's username from Auth
      # see below for full options
      OIDCRemoteUserClaim preferred_username
      OIDCAuthNHeader X-Proxy-Remote-User
    {%- endif %}
    {%- if openid_proxy.root is defined %}
        DocumentRoot {{ openid_proxy.root }}
        ErrorDocument 404 /index.html
    {%- endif %}
    {%- if openid_proxy.ssl.enabled %}
    RequestHeader set X-Forwarded-Proto "https"
    {%- endif %}
    {%- if openid_proxy.remote_locations %}
      {%- for location, services in openid_proxy.remote_locations|dictsort %}
        {%- for service, data in services|dictsort %}
          {{ apache_location('/'+location+'/'+service+'/', data) }}
        {%- endfor %}
      {%- endfor %}
    {%- endif %}
    {%- if openid_proxy.locations %}
      {%- for location, data in openid_proxy.locations|dictsort %}
        {%- if location == "root" %}
          {{ apache_location(data.path, data) }}
        {%- else %}
          {{ apache_location('/'+location+'/', data) }}
        {%- endif %}
      {%- endfor %}
    {% endif %}
    {%- if openid_proxy.apache_status %}
    <Location /apache-status>
      {% if openid_proxy.oidc.enabled -%}
      AuthType openid-connect
      Require claim is_staff:true
      {% endif -%}
      SetHandler server-status
    </Location>
    {% endif %}

    {%- if openid_proxy.health_check_enabled|default('False')|bool %}
    <Location /health_check>
      Order allow,deny
      Allow from all
      Satisfy any
    </Location>
    {% endif -%}

    ErrorLog ${APACHE_LOG_DIR}/openid-{{ openid_proxy.vhost_name }}-error.log
    # Possible values include: debug, info, notice, warn, error, crit,
    # alert, emerg.
    LogLevel {{ openid_proxy.log_level }}
    CustomLog ${APACHE_LOG_DIR}/openid-{{ openid_proxy.vhost_name }}-access.log combined
</VirtualHost>
