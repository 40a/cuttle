#jinja2:trim_blocks: False
# {{ ansible_managed }}

{%- if auth_openid.ssl.enabled and auth_openid.http_redirect %}
<VirtualHost {{ auth_openid.listen_ip }}:{{ auth_openid.listen_port }}>
      ServerName {{ auth_openid.server_name }}
      Redirect permanent / https://{{ auth_openid.server_name }}/
      FileETag MTime Size
</VirtualHost>
{%- endif %}

{%- if auth_openid.ssl.enabled %}
<VirtualHost {{ auth_openid.listen_ip }}:{{ auth_openid.listen_port_ssl }}>
{%- else %}
<VirtualHost {{ auth_openid.listen_ip }}:{{ auth_openid.listen_port }}>
{%- endif %}
      ServerName {{ auth_openid.server_name }}
      ServerAdmin {{ auth_openid.server_admin }}
      FileETag MTime Size
    {%- if auth_openid.ssl.enabled %}
      RequestHeader set X-Forwarded-Proto "https"
      SSLCertificateFile /etc/ssl/certs/{{ auth_openid.vhost_name }}.pem
      SSLCertificateKeyFile /etc/ssl/private/{{ auth_openid.vhost_name }}.key
    {{ apache.ssl.settings }}
    {%- endif %}
      OIDCScope "openid"
      OIDCProviderIssuer {{ auth_openid.provider_issuer }}
      OIDCProviderAuthorizationEndpoint {{ auth_openid.provider_auth_endpoint }}
      OIDCProviderTokenEndpoint {{ auth_openid.provider_token_endpoint }}
      OIDCProviderUserInfoEndpoint {{ auth_openid.provider_userinfo_endpoint }}
      OIDCClientID {{ auth_openid.id }}
      OIDCClientSecret {{ auth_openid.secret }}
      # only used internally for passing state around securely
      OIDCCryptoPassphrase {{ auth_openid.passphrase }}
      # Arbitrary but must be a path under the protected resource.
      OIDCRedirectURI {{ auth_openid.redirect_uri }}

      # Sessions are valid for 12 hours (60*60*12) = 43200
      OIDCSessionInactivityTimeout 43200
      # Store session state in stateless manner
      OIDCSessionType client-cookie
      # sets REMOTE_USER to the user's username from Auth
      # see below for full options
      OIDCRemoteUserClaim preferred_username
      OIDCAuthNHeader X-Proxy-Remote-User

    <Location />
        ProxyPass {{ auth_basic.proxy_to }}
        ProxyPassReverse {{ auth_basic.proxy_to }}
        AuthType openid-connect
        Require claim is_staff:true
    </Location>

    {%- if auth_openid.apache_status %}
    <Location /apache-status>
      AuthType openid-connect
      Require claim is_staff:true
      SetHandler server-status
    </Location>
    {% endif %}

    ErrorLog ${APACHE_LOG_DIR}/openid-{{ auth_openid.vhost_name }}-error.log
    # Possible values include: debug, info, notice, warn, error, crit,
    # alert, emerg.
    LogLevel {{ auth_openid.log_level }}
    CustomLog ${APACHE_LOG_DIR}/openid-{{ auth_openid.vhost_name }}-access.log combined
</VirtualHost>
