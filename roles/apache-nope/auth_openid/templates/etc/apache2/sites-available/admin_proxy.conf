#jinja2:trim_blocks: False
# {{ ansible_managed }}
{%- macro apache_location(path, location) %}
    <Location {{ path }}>
      {%- if location.config is defined %}
        {%- for config_item in location.config %}
        {%- for key, value in config_item.iteritems() %}
        {{ key }} {{ value }}
        {%- endfor %}
        {%- endfor %}
      {%- endif %}
      {%- if location.proxy is defined %}
        ProxyPass {{ location.proxy }}
        ProxyPassReverse {{ location.proxy }}
      {%- endif %}
        AuthUserFile /etc/apache2/openid_admin_passwd
        AuthType Basic
        AuthName "Admin Auth Override"
        Require valid-user
    </Location>
{%- endmacro %}
{%- if openid_proxy.ssl.enabled and openid_proxy.http_redirect %}
<VirtualHost {{ openid_proxy.listen.admin_ip }}:{{ openid_proxy.listen.admin_port }}>
    ServerName {{ openid_proxy.server_name }}
    Redirect permanent / https://{{ openid_proxy.server_name }}:{{ openid_proxy.listen.admin_port_ssl }}/
</VirtualHost>
{%- endif %}
{%- if openid_proxy.ssl.enabled %}
<VirtualHost {{ openid_proxy.listen.admin_ip }}:{{ openid_proxy.listen.admin_port_ssl }}>
{%- else %}
<VirtualHost {{ openid_proxy.listen.admin_ip }}:{{ openid_proxy.listen.admin_port }}>
{%- endif %}
    ServerName {{ openid_proxy.server_name }}
    ServerAdmin {{ openid_proxy.server_admin }}

    {%- if openid_proxy.ssl.enabled %}
    SSLCertificateFile /etc/ssl/certs/{{ openid_proxy.vhost_name }}.pem
    SSLCertificateKeyFile /etc/ssl/private/{{ openid_proxy.vhost_name }}.key
    {{ apache.ssl.settings }}
    {%- endif %}

    {%- if openid_proxy.root is defined %}
        DocumentRoot {{ openid_proxy.root }}
        ErrorDocument 404 /index.html
    {%- endif %}
    {%- if openid_proxy.ssl.enabled %}
    RequestHeader set X-Forwarded-Proto "https"
    {%- endif %}
    {%- if openid_proxy.remote_locations %}
      {%- for location, services in openid_proxy.remote_locations|dictsort %}
        {%- for service, data in services|dictsort %}
          {{ apache_location('/'+location+'/'+service+'/', data) }}
        {%- endfor %}
      {%- endfor %}
    {%- endif %}
    {%- if openid_proxy.locations %}
      {%- for location, data in openid_proxy.locations|dictsort %}
        {%- if location == "root" %}
          {{ apache_location(data.path, data) }}
        {%- else %}
          {{ apache_location('/'+location+'/', data) }}
        {%- endif %}
      {%- endfor %}
    {% endif %}


    {% if openid_proxy.apache_status %}
    <Location /apache-status>
        AuthUserFile /etc/apache2/openid_admin_passwd
        AuthType Basic
        AuthName "Admin Auth Override"
        Require valid-user
    </Location>
    {% endif %}
    {%- if openid_proxy.health_check_enabled|default('False')|bool %}
    <Location /health_check>
      Order allow,deny
      Allow from all
      Satisfy any
    </Location>
    {% endif -%}
    ErrorLog ${APACHE_LOG_DIR}/admin-{{ openid_proxy.vhost_name }}-error.log
    # Possible values include: debug, info, notice, warn, error, crit,
    # alert, emerg.
    LogLevel {{ openid_proxy.log_level }}
    CustomLog ${APACHE_LOG_DIR}/admin-{{ openid_proxy.vhost_name }}-access.log combined
</VirtualHost>

