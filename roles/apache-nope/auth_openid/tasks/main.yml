---
- name: install mod_auth_openidc deps
  apt: pkg=ssl-cert

- name: download mod_auth_openidc
  get_url: url={{ openid_proxy.download.url }}
           dest=/tmp/libapache2-mod-auth-openidc_{{ openid_proxy.version }}-1_amd64.deb
  when: openid_proxy.oidc.enabled|bool

- name: install mod_auth_openidc
  apt: deb=/tmp/libapache2-mod-auth-openidc_{{ openid_proxy.version }}-1_amd64.deb
       install_recommends=yes
  notify: restart apache
  when: openid_proxy.oidc.enabled|bool

- name: enable apache mod auth_openidc
  apache2_module: name=auth_openidc
  when: openid_proxy.oidc.enabled|bool
  notify: restart apache

# if mod auth_openidc is enabled but not configured or used by any sites
# it blocks apache start
- name: configure default auth provider
  lineinfile: dest=/etc/apache2/mods-available/auth_openidc.conf
              line="OIDCProviderIssuer auth.bluebox.net"
  notify: restart apache
  when: openid_proxy.oidc.enabled|bool

- name: enable apache mod ssl
  apache2_module: name=ssl
  notify: restart apache
  when: openid_proxy.ssl.enabled

- name: install ssl key
  template: src=etc/ssl/private/openid_proxy.key
            dest=/etc/ssl/private/{{ openid_proxy.vhost_name }}.key
            owner=root group=ssl-key mode=0640
  when: openid_proxy.ssl.enabled
  notify: restart apache

- name: install ssl cert
  template: src=etc/ssl/certs/openid_proxy.pem
            dest=/etc/ssl/certs/{{ openid_proxy.vhost_name }}.pem
  when: openid_proxy.ssl.enabled
  notify: restart apache

- name: install apache template
  template: src=etc/apache2/sites-available/auth_openid.conf
            dest=/etc/apache2/sites-available/{{ openid_proxy.vhost_name }}.conf
  notify: restart apache

- name: enable site
  apache2_site: name={{ openid_proxy.vhost_name }}.conf state={{ openid_proxy.apache.state }}
  notify: restart apache

- name: allow openid_proxy traffic
  ufw: rule=allow to_port={{ item.0.port }} src={{ item.1|default('127.0.0.1') }}
  with_subelements:
    - "{{ openid_proxy.firewall }}"
    - src
  tags:
    - firewall

- meta: flush_handlers

- name: ensure apache is running
  service: name=apache2 state=started enabled=yes

- include: checks.yml
  when: sensu.client.enable_checks|default('True')|bool
  tags: sensu-checks

- include: metrics.yml
  when: sensu.client.enable_metrics|default('True')|bool
  tags: sensu-metrics

- include: serverspec.yml
  when: serverspec.enabled|default("True")|bool
  tags: serverspec
