#jinja2:trim_blocks: False
# {{ ansible_managed }}
{%- macro apache_location(path, location) %}
    <Location {{ path }}>
      {%- if location.config is defined %}
        {%- for config_item in location.config %}
        {%- for key, value in config_item.iteritems() %}
        {{ key }} {{ value }}
        {%- endfor %}
        {%- endfor %}
      {%- endif %}
      {%- if location.proxy is defined %}
        ProxyPass {{ location.proxy }}
        ProxyPassReverse {{ location.proxy }}
      {%- endif %}
    </Location>
{%- endmacro %}
{%- if oauth2_proxy.apache.ssl.enabled and oauth2_proxy.http_redirect %}
<VirtualHost {{ oauth2_proxy.apache.ip }}:{{ oauth2_proxy.apache.port }}>
    ServerName {{ oauth2_proxy.server_name }}
    Redirect permanent / https://{{ oauth2_proxy.server_name }}/
    FileETag MTime Size
</VirtualHost>
{%- endif %}
{%- if oauth2_proxy.apache.ssl.enabled %}
<VirtualHost {{ oauth2_proxy.apache.ssl.ip }}:{{ oauth2_proxy.apache.ssl.port }}>
    ServerName {{ oauth2_proxy.server_name }}
    ServerAdmin {{ oauth2_proxy.server_admin }}
    FileETag MTime Size
    SSLCertificateFile /etc/ssl/certs/oauth2_proxy.crt
    SSLCertificateKeyFile /etc/ssl/private/oauth2_proxy.key
    {{ apache.ssl.settings }}

    RequestHeader set X-Forwarded-Proto "https"

    {%- if oauth2_proxy.apache.auth_proxy.enabled %}
    ProxyPreserveHost On
    ProxyPass / http://{{ oauth2_proxy.apache.auth_proxy.ip }}:{{ oauth2_proxy.apache.auth_proxy.port }}/
    ProxyPassReverse / http://{{ oauth2_proxy.apache.auth_proxy.ip }}:{{ oauth2_proxy.apache.auth_proxy.port }}/
    {%- endif %}

    ErrorLog ${APACHE_LOG_DIR}/oauth2-auth-proxy-{{ oauth2_proxy.vhost_name }}-error.log
    # Possible values include: debug, info, notice, warn, error, crit,
    # alert, emerg.
    LogLevel {{ oauth2_proxy.apache.auth_proxy.log_level }}
    CustomLog ${APACHE_LOG_DIR}/oauth2-auth-proxy-{{ oauth2_proxy.vhost_name }}-access.log combined
</VirtualHost>
{%- endif %}
{%- if oauth2_proxy.apache.auth_proxy.enabled and oauth2_proxy.apache.protected_locations.enabled %}
<VirtualHost {{ oauth2_proxy.apache.protected_locations.ip }}:{{ oauth2_proxy.apache.protected_locations.port }}>
    {%- if oauth2_proxy.docroot is defined %}
    DocumentRoot {{ oauth2_proxy.docroot }}
    ErrorDocument 404 /index.html
    {%- endif %}
    {%- if oauth2_proxy.locations %}
    {%- for location, data in oauth2_proxy.locations|dictsort %}
    {%- if location == "root" %}
    {{ apache_location(data.path, data) }}
    {%- else %}
    {{ apache_location('/'+location+'/', data) }}
    {%- endif %}
    {%- endfor %}
    {% endif %}
    {%- if oauth2_proxy.apache_status %}
    <Location /apache-status>
      SetHandler server-status
    </Location>
    {% endif %}
    ErrorLog ${APACHE_LOG_DIR}/oauth2-protected-locations-{{ oauth2_proxy.vhost_name }}-error.log
    # Possible values include: debug, info, notice, warn, error, crit,
    # alert, emerg.
    LogLevel {{ oauth2_proxy.apache.protected_locations.log_level }}
    CustomLog ${APACHE_LOG_DIR}/oauth2-protected-locations-{{ oauth2_proxy.vhost_name }}-access.log combined
</VirtualHost>
{%- endif %}
