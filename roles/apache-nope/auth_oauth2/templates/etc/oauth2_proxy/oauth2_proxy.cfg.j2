# {{ ansible_managed }}

## OAuth2 Proxy Config File
## https://github.com/bitly/oauth2_proxy

## <addr>:<port> to listen on for HTTP/HTTPS clients
http_address = "{{ oauth2_proxy.apache.auth_proxy.ip }}:{{ oauth2_proxy.apache.auth_proxy.port }}"

provider = "{{oauth2_proxy.config.provider}}"
login_url = "{{ oauth2_proxy.config.provider_url }}/login/oauth/authorize"
redeem_url = "{{ oauth2_proxy.config.provider_url }}/login/oauth/access_token"
validate_url = "{{ oauth2_proxy.config.provider_url }}/api/v3/user/emails"

## the OAuth Redirect URL.
# defaults to the "https://" + requested host header + "/oauth2/callback"
redirect_url = "https://{{ oauth2_proxy.server_name }}/oauth2/callback"


## the http url(s) of the upstream endpoint. If multiple, routing is based on path
upstreams = "{{ oauth2_proxy.apache.protected_locations.url }}"

## The OAuth Client ID, Secret
client_id = "{{oauth2_proxy.config.client_id}}"
client_secret = "{{oauth2_proxy.config.client_secret}}"

## Log requests to stdout
request_logging = true

## pass HTTP Basic Auth, X-Forwarded-User and X-Forwarded-Email information to upstream
# pass_basic_auth = true
## pass the request Host Header to upstream
## when disabled the upstream Host is used as the Host Header
# pass_host_header = true

## Email Domains to allow authentication for (this authorizes any email on this domain)
## for more granular authorization use `authenticated_emails_file`
## To authorize any email addresses use "*"
email_domains = [{{oauth2_proxy.config.email_domains|join(",")}}]

## Pass OAuth Access token to upstream via "X-Forwarded-Access-Token"
pass_access_token = {{oauth2_proxy.config.pass_access_token}}

## Authenticated Email Addresses File (one email per line)
# authenticated_emails_file = ""

## Htpasswd File (optional)
## Additionally authenticate against a htpasswd file. Entries must be created with "htpasswd -s" for SHA encryption
## enabling exposes a username/login signin form
# htpasswd_file = ""

## Templates
## optional directory with custom sign_in.html and error.html
# custom_templates_dir = ""

## Cookie Settings
## Name     - the cookie name
## Secret   - the seed string for secure cookies; should be 16, 24, or 32 bytes
##            for use with an AES cipher when cookie_refresh or pass_access_token
##            is set
## Domain   - (optional) cookie domain to force cookies to (ie: .yourcompany.com)
## Expire   - (duration) expire timeframe for cookie
## Refresh  - (duration) refresh the cookie when duration has elapsed after cookie was initially set.
##            Should be less than cookie_expire; set to 0 to disable.
##            On refresh, OAuth token is re-validated.
##            (ie: 1h means tokens are refreshed on request 1hr+ after it was set)
## Secure   - secure cookies are only sent by the browser of a HTTPS connection (recommended)
## HttpOnly - httponly cookies are not readable by javascript (recommended)
cookie_name = "{{oauth2_proxy.config.cookie_name}}"
cookie_secret = "{{oauth2_proxy.config.cookie_secret}}"
cookie_domain = "{{oauth2_proxy.config.cookie_domain}}"
cookie_expire = "{{oauth2_proxy.config.cookie_expire}}"
cookie_refresh = "{{oauth2_proxy.config.cookie_refresh}}"
cookie_secure = {{oauth2_proxy.config.cookie_secure}}
cookie_httponly = {{oauth2_proxy.config.cookie_httponly}}
