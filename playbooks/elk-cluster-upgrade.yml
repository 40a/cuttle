---
- name: stop ingestion and queries
  hosts: logstash:kibana
  tasks:
    - name: stop logstash
      service:
        name: logstash
        state: stopped

    - name: stop apache
      service:
        name: apache2
        state: stopped

    - name: stop kibana
      service:
        name: kibana
        state: stopped
        must_exist: false

- name: upgrade logstash and kibana
  hosts: logstash:kibana
  vars:
    kibana:
      config: false
  pre_tasks:
    - name: remove kibana upstart script
      file:
        path: /etc/init/kibana.conf
        state: absent
  roles:
    - role: kibana
      tags: ['kibana']
    - role: logstash
      tags: ['logstash']

- name: cluster upgrade elasticsearch
  hosts: elasticsearch
  vars:
    elasticsearch:
      start_on_config: false
      wait_for_listening: false
  pre_tasks:
    - block:
      - name: disable elasticsearch shard allocation
        uri:
          url: http://localhost:9200/_cluster/settings
          method: PUT
          body: '{ "persistent": { "cluster.routing.allocation.enable": "none" } }'
          body_format: json
          return_content: yes
          status_code: 200
        register: es_disable_shard_alloc
        failed_when: false
        run_once: true

      - name: request a synced flush
        uri:
          url: http://localhost:9200/_flush/synced
          method: POST
          return_content: yes
          status_code: 200
        register: es_sync_flush
        failed_when: false
        run_once: true

    - name: safely shutdown local elasticsearch node
      service:
        name: elasticsearch
        state: stopped

    - name: wait for elasticsearch to stop listening on localhost:9200
      wait_for: port=9200 state=stopped delay=0

    - name: remove elasticsearch startup config (replaced during upgrade)
      file:
        path: /etc/default/elasticsearch
        state: absent

    - name: remove elasticsearch plugins (replaced during upgrade)
      file:
        path: /usr/share/elasticsearch/plugins
        state: absent

    - name: remove old sensu-client checks
      sensu_check:
        name: "{{ item.name }}"
        plugin: "{{ item.plugin }}"
        state: absent
      with_items:
        - name: check-es-insert-rate
          plugin: check-es-insert-rate.rb

    - name: remove old sensu-client metrics
      sensu_metrics_check:
        name: "{{ item.name }}"
        plugin: "{{ item.plugin }}"
        state: absent
      with_items:
        - name: es-cluster-metrics
          plugin: es-cluster-metrics.rb
        - name: es-node-graphite
          plugin: es-node-graphite.rb
  roles:
    - role: elasticsearch
      tags: ['elasticsearch']
  post_tasks:
    - name: overwrite modified elasticsearch service script with package script
      copy:
        src: /etc/init.d/elasticsearch.dpkg-dist
        dest: /etc/init.d/elasticsearch
        remote_src: True
      failed_when: false # ignore failures, as the src likely does not exist

    - name: remove elasticsearch package service script backup
      file:
        path: /etc/init.d/elasticsearch.dpkg-dist
        state: absent

    - name: start elasticsearch since it likely failed in the role or was disabled
      service:
        name: elasticsearch
        state: started

    - name: wait for elasticsearch to start listening on localhost:9200
      wait_for: port=9200 state=started delay=0

    - name: start apache
      service: name=apache2 state=started

    - name: wait 60 seconds for all shards to recover/cluster status yellow or green, retry 10 times
      action: uri
      args:
        url: http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=60s
        method: GET
        status_code: 200
        timeout: 120
      register: es_shard_recovery_status
      until: es_shard_recovery_status.json.status == "yellow" or es_shard_recovery_status.json.status == "green"
      retries: 10
      delay: 10

    - name: enable elasticsearch shard allocation (and recovery)
      uri:
        url: http://localhost:9200/_cluster/settings
        method: PUT
        body: '{ "persistent": { "cluster.routing.allocation.enable" : "all" } }'
        body_format: json
        return_content: yes
        status_code: 200
        timeout: 30
      register: es_disable_shard_alloc
      run_once: true

    - name: wait 60 seconds for all shards to recover/cluster status green, retry 60 times
      action: uri
      args:
        url: http://localhost:9200/_cluster/health?wait_for_status=green&timeout=60s
        method: GET
        status_code: 200
        timeout: 120
      register: es_shard_recovery_status
      until: es_shard_recovery_status.json.status == "green"
      retries: 10
      delay: 10


- name: start ingestion and queries
  hosts: logstash:kibana
  tasks:
    - name: start logstash
      service:
        name: logstash
        state: started

    - name: start kibana since it likely failed in the role or was disabled
      service:
        name: kibana
        state: started

    - name: wait for kibana to start listening on localhost:5601
      wait_for: port=5601 state=started delay=0
