---
###################
# To make a report:
#  1)
#     - WITH comparison of previous stats, run
#       ursula <env> playbooks/elk-stats.yml
#
#      or,
#
#     - WITHOUT comparison of previous stats, run
#       ursula <env> playbooks/elk-stats.yml -e prev_stats=False
#  2)
#     Then run python playbooks/stats-to-spreadsheet.py
#     This will create the sitecontroller/elk-stats/report.xls spreadsheet
#
#  OPTIONAL: days_ago (configure how many days ago to compare to)
#  NOTE: elk-stats.yml playbook should be run against all sites,
#    then stats-to-spreadsheet.py should be run
###################
- name: gather elk stats
  hosts: elk01
  serial: 1
  tasks:
    - name: identify current stats file
      shell: ls /opt/sitecontroller/elk-stats-output/stats-summary-* | tail -n1
      register: current_stats

    - name: gather current stats file
      fetch:
        src: "{{ item }}"
        dest: "../elk-stats/{{ site_abrv }}-current_stats.json"
        fail_on_missing: yes
        flat: yes
      with_items: "{{ current_stats.stdout }}"

    - block:
      - name: identify previous stats file
        shell: "ls /opt/sitecontroller/elk-stats-output/stats-summary-* | tail -n{{ days_ago | default(1) | int() * 4 + 1}} | head -n1"
        register: previous_stats

      - name: gather previous stats file
        fetch:
          src: "{{ item }}"
          dest: "../elk-stats/{{ site_abrv }}-previous_stats.json"
          fail_on_missing: yes
          flat: yes
        with_items: "{{ previous_stats.stdout }}"
      when: "{{ prev_stats | default(True) | bool }}"
